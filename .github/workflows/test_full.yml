name: Full Test

on:
  push:
  workflow_dispatch:
  pull_request:
    types: [assigned, opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
        django-version: ['<3.2', '<3.3', '<4.2', '<4.3', '<5.1', '<5.2']
        exclude:
          - python-version: '3.7'
            django-version: '<5.1'
          - python-version: '3.8'
            django-version: '<5.1'
          - python-version: '3.9'
            django-version: '<5.1'
          - python-version: '3.12'
            django-version: '<3.2'
          - python-version: '3.12'
            django-version: '<3.3'
          - python-version: '3.13'
            django-version: '<3.2'
          - python-version: '3.13'
            django-version: '<3.3'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install core
        run: pip install --pre "Django${{ matrix.django-version }}" "pydantic<3"
      - name: Install tests
        run: pip install pytest pytest-asyncio pytest-django psycopg2-binary coverage pytest-cov
      - name: Format test name
        id: name
        run: |
          echo "name=py${{ matrix.python-version }}.dj${{ matrix.django-version }}" | sed -e "s/<//g" -e "s/>//g" >> "$GITHUB_OUTPUT"
      - name: Test
        run: COVERAGE_FILE=".coverage.${{ steps.name.outputs.name }}" pytest --junit-xml="pytest-${{ steps.name.outputs.name }}}.xml" --cov=ninja --cov-fail-under=0
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: Test Results (${{ steps.name.outputs.name }})
          path: |
            pytest-*.xml
            .coverage.*

  coverage:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Flit
        run: pip install flit "django>=5.0"
      - name: Install Dependencies
        run: flit install --symlink
      - name: Download Coverage Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Combine Coverage Artifacts
        run: |
          cp artifacts/*/.coverage.* .
          coverage combine
          coverage xml
      - name: Pytest coverage comment
        uses: orgoro/coverage@v3.2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          thresholdAll: '1.0'
          thresholdModified: '1.0'
          thresholdNew: '1.0'
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          files: |
            artifacts/**/*.xml
      - name: Check minimum coverage
        run: |
          coverage report --fail-under=100

  codestyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install Flit
        run: pip install flit
      - name: Install Dependencies
        run: flit install --symlink
      - name: Ruff format
        run: ruff format --preview --check ninja tests
      - name: Ruff lint
        run: ruff check --preview ninja tests
      - name: mypy
        run: mypy ninja tests/mypy_test.py
